// Generated by view binder compiler. Do not edit!
package com.example.glbd22021.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.glbd22021.R;
import com.makeramen.roundedimageview.RoundedImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContaineurUtilisateurBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RoundedImageView imageProfile;

  @NonNull
  public final TextView textEmail;

  @NonNull
  public final TextView textNom;

  @NonNull
  public final View viewSupporter;

  private ContaineurUtilisateurBinding(@NonNull ConstraintLayout rootView,
      @NonNull RoundedImageView imageProfile, @NonNull TextView textEmail,
      @NonNull TextView textNom, @NonNull View viewSupporter) {
    this.rootView = rootView;
    this.imageProfile = imageProfile;
    this.textEmail = textEmail;
    this.textNom = textNom;
    this.viewSupporter = viewSupporter;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContaineurUtilisateurBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContaineurUtilisateurBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.containeur_utilisateur, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContaineurUtilisateurBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageProfile;
      RoundedImageView imageProfile = ViewBindings.findChildViewById(rootView, id);
      if (imageProfile == null) {
        break missingId;
      }

      id = R.id.textEmail;
      TextView textEmail = ViewBindings.findChildViewById(rootView, id);
      if (textEmail == null) {
        break missingId;
      }

      id = R.id.textNom;
      TextView textNom = ViewBindings.findChildViewById(rootView, id);
      if (textNom == null) {
        break missingId;
      }

      id = R.id.viewSupporter;
      View viewSupporter = ViewBindings.findChildViewById(rootView, id);
      if (viewSupporter == null) {
        break missingId;
      }

      return new ContaineurUtilisateurBinding((ConstraintLayout) rootView, imageProfile, textEmail,
          textNom, viewSupporter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
